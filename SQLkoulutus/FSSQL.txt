

MAANANTAI

Päivän agenda:
	SQL kieli
	
-Tietokantapalvelin, 
-Tietokannat: relaatiotietokannat (SQL) ja NoSQL
-SQL kieli.

https://github.com/microsoft/sql-server-samples/blob/master/samples/databases/northwind-pubs/instnwnd.sql

Käytä tietokantaa verkossa.
https://sqliteonline.com/

Northwind MySQL palvelimelle
https://github.com/dalers/mywind

SQL lauseen nopeuden arviointi Tomcatille tai vastaavalle.
https://glowroot.org/


https://sqliteonline.com/#urldb=https://raw.githubusercontent.com/jpwhite3/northwind-SQLite3/master/dist/northwind.db


Yleisesti eri tietokantojen käytöstä eli SQL ja NoSQL kantojen erot ja käyttö:

https://frontendmasters.com/courses/databases/

https://www.digitalocean.com/community/tutorials/understanding-sql-and-nosql-databases-and-different-database-models

https://www.digitalocean.com/community/tutorials/sqlite-vs-mysql-vs-postgresql-a-comparison-of-relational-database-management-systems

https://docs.microsoft.com/en-us/learn/browse/?resource_type=learning%20path&products=sql-server

https://docs.microsoft.com/en-us/sql/sql-server/?view=sql-server-ver15

https://tikape.mooc.fi/syksy-2020/

Tehtäviä:
"Hae kaikki tiedot Shippers taulusta!"
"Missä eri kaupungeissä on suppliereitä?"
"Montako ShipperIDtä löytyy Orders taulusta?"
"Etsi tuotteet, joiden hinta on 20 ja 50 euron välissä!"
"Etsi asiakkaat, jotka ovat USAssa tai Saksassa"
"Etsi kaikki asiakkaat, jotka eivät ole saksalaisia"
"Etsi kaikki asiakkaat, jotka ovat USAsta tai Saksasta mutta eivät Berliinistä"
"Näytä tilaukset tilauspäivämäärän mukaan järjestyksessä"
"Näytä tuotteet hinnan mukaan korkein hinta ensin"
"Näytä Kategoria 2:n tuotteet hinnan mukaan"

"Lisää asiakas Customers tauluun"
"Hae lisäämäsi asiakkaat"
"Muuta luomaasi Customers taulua niin että luomallasi asiakkaalla on kaikki tiedot"
"Poista luomasi asiakkaat Customers taulusta"

Vastauksia:

"Hae kaikki tiedot Shippers taulusta!"

SELECT * FROM Shippers;

"Missä eri kaupungeissä on suppliereitä?"

SELECT DISTINCT City FROM Suppliers;

"Montako ShipperIDtä löytyy Orders taulusta?"

SELECT COUNT (DISTINCT ShipperID) FROM Orders;

"Etsi tuotteet, joiden hinta on 20 ja 50 euron välissä!"

SELECT * FROM Products WHERE Price >= 20 AND Price <= 50;

"Etsi asiakkaat, jotka ovat USAssa tai Saksassa"

SELECT * FROM Customers WHERE Country="USA" OR Country="Germany";

"Etsi kaikki asiakkaat, jotka eivät ole saksalaisia"

SELECT * FROM Customers WHERE NOT Country="Germany";

"Etsi kaikki asiakkaat, jotka ovat USAsta tai Saksasta mutta eivät Berliinistä"

SELECT * FROM Customers WHERE ( Country="USA" OR Country="Germany" ) AND NOT City="Berlin";

"Näytä tilaukset tilauspäivämäärän mukaan järjestyksessä"

SELECT * FROM Orders ORDER BY OrderDate;

"Näytä tuotteet hinnan mukaan korkein hinta ensin"

SELECT * FROM Products ORDER BY Price DESC

"Näytä Kategoria 2:n tuotteet hinnan mukaan"

SELECT * FROM Products WHERE CategoryID = 2 ORDER BY Price;

"Lisää asiakas Customers tauluun"

INSERT INTO Customers(CustomerName, Address, City, PostalCode, Country)
VALUES ("Albert Hilbert", "Brandstrasse 4 B", "Berlin", 91120, "Germany")

"Lisää asiakas, josta EI ole kaikkia tietoja Customers tauluun"

INSERT INTO Customers(CustomerName, City, Country) VALUES ("Jorma Huttunen", "New York", "USA")

"Hae lisäämäsi asiakkaat"

"Muuta luomaasi Customers taulua niin että luomallasi asiakkaalla on kaikki tiedot"

UPDATE Customers
SET Address="5th Avenue"
WHERE CustomerName="Jorma Huttunen"

"Poista luomasi asiakkaat Customers taulusta"

---


Tietokannan perusoperaatiot ovat CRUD operaatioita
	CREATE
	READ (käytännössä SELECT)
	UPDATE
	DELETE

---

"Hakekaa lisätietoa Orders tauluun OrderDetails taulusta"
Tämä on LEFT JOIN

Yleistä SQL kielestä:
Tietokantojen opiskeluun sopivia verkkosivuja.
Tässä on SQL kurssi: "Tietokantojen perusteet syksy 2020"
	https://tikape.mooc.fi/syksy-2020/

Tämä on hyvä aloittelijoille:
	https://www.w3schools.com/sql/default.asp
	https://www.tutorialspoint.com/sql/index.htm

Tämä on hyvä MySQL tutorial
	https://www.javatpoint.com/mysql-tutorial
	https://www.tutorialspoint.com/mysql/index.htm
	https://www.w3resource.com/mysql/mysql-tutorials.php

Tässä on hyvä MySQL ja PHP tuki!
	https://www.mysqltutorial.org/


TIISTAI

Päivän agenda:
	SQL Server käytännössä - View, stored procedure, stored function

Microsofting SQL Server kirjoja:
https://www.microsoft.com/en-us/sql-server/sql-server-2019

https://www.sqlservertutorial.net/

https://www.mssqltips.com/sqlservertip/1599/cursor-in-sql-server/#:~:text=A%20SQL%20Server%20cursor%20is,backups%20in%20a%20sequential%20manner.


KESKIVIIKKO

Päivän agenda:
	Triggerit
	Indeksointi
	Relaatiotietokannan suunnittelu

	NoSQL kannat
	SQLServer + Node.JS

Lue tämä MySQL + Node.JS yhteensopivuudesta!
https://stackoverflow.com/questions/52815608/er-not-supported-auth-mode-client-does-not-support-authentication-protocol-requ

Lue myös:
https://github.com/mysqljs/mysql

SQL tietokannan performanssin kannalta tärkein asia on hyvin tehty indeksointi. Lue seuraavassa järjestyksessä:
https://stackoverflow.com/questions/1108/how-does-database-indexing-work
http://opensourceforgeeks.blogspot.fi/2017/05/how-does-database-indexing-work.html
http://opensourceforgeeks.blogspot.fi/2017/09/understanding-database-indexes-part-2.html
https://stackoverflow.com/questions/1156/how-do-i-index-a-database-column

Paras yksittäinen lähde indeksointiin:
https://use-the-index-luke.com/


Indeksointi:
1) Yksittäisiä sarakkeita voi indeksoida. Voiko tehdä indeksin, jossa on monta saraketta?

Kyllä

2) Jos haetaan yksittäisellä sarakkeella, joka kuuluu indeksiin, jossa on monta saraketta. käyttääkö haku tällöin tätä indeksiä?

Riippuu tilanteesta. Jos on A sarake ja B sarake ja indeksi on (A,B), niin:

Haetaan Alla ---> Käyttää indeksiä
Haetaan Bllä ---> Ei käytä indeksiä
Haetaan A ja Bllä ---> Käyttää indeksiä
Haetaan B ja Alla ---> Ei käytä indeksiä

Katso: https://use-the-index-luke.com/sql/where-clause/the-equals-operator/concatenated-keys

https://dataschool.com/sql-optimization/multicolumn-indexes/

(A,B,C)
A --> OK
B --> Ei
C --> Ei
A,B --> OK
A,C --> OK
B,A --> Ei
B,C --> Ei
C,A --> Ei
C,B --> Ei
A,B,C --> OK
A,C,B --> OK 
B,A,C --> Ei
B,C,A --> Ei 
C,B,A --> Ei
C,A,B --> Ei

(lastname,firstname)
select * 
from employees
where lastname = ZZZ and firstname = YYY
order by lastname, firstname

3) Miksi yhtäkuin (=) on parempi kuin "<" ?

Yhtäsuuruusmerkillä olevan indeksin haulla saadaan hakua rajoitettua olennaisesti. Tämän jälkeen suurempi/pienempi on nopea tehdä pienelle joukolle.

4) Miten Wildcard (jokerimerkkiä %) voi käyttää indeksin kanssa?

Se riippuu. 
Jokerimerkin ollessa lopussa tai keskellä haku käyttää indeksin ensimmäisiä merkkejä hakuehtoina ja hakee tämän jälkeen muutaman osuman. 
Jokerimerkin ollessa alussa koko taulu käydään läpi ja indeksointi ei toimi.

SQL suunnittelua...

https://www.mssqltips.com/sqlservertutorial/2900/sql-server-database-design-best-practices-tutorial/

Microsoftin hyvä yleiskuvaus
https://support.microsoft.com/en-us/office/database-design-basics-eb2159cf-1e30-401a-8084-bd4f9c9ca1f5

Oikein hyvä perusasiat osoittava suunnitteluopas
http://www.geeksengine.com/database/design/
https://blog.devart.com/sql-database-design-basics-with-example.html


Hyvä opas kantasuunnittelijoille
Len Silverston: The Data Model Resource Book

Mikä ihmeen NoSQL?

https://www.digitalocean.com/community/tutorials/what-is-nosql

https://www.digitalocean.com/community/tutorials/a-comparison-of-nosql-database-management-systems-and-models

https://medium.com/hacking-building/nosql-design-patterns-for-relational-data-9c2c11ae3b4a

Rakentakaa skripti, jolla te .....
	1) luotte kaksi taulua:
		Kissa
		Omistaja
	2) lisäätte kumpaankin muutaman rivin
	3) Haette kaikki kissat, joiden omistaja on XYZ

	4) tuhoatte taulut

TORSTAI 

Suunnittele kirjasto

PAIVA KAKS
Luo stored procedure, joka palauttaa result setissä kaikki maat, 
joissa on asiakkaita. Stored Proceduren nimi on spGetCustomerCountries
 
Luo stored procedure, joka kirjoittaa monessako eri maassa on asiakkaita.
Stored Proceduren nimi on spHowManyCustomerCountries
 
Luo stored Procedure, joka palauttaa tuotenimet ja hinnat, joiden tuotteiden hinta on alle X.
Stored Proceduren nimi on spMaximumPrice. X on argumentti.

